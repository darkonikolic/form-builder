services:
  # PHP Application
  php:
    build:
      context: ../app
      dockerfile: ../docker/php/Dockerfile
    volumes:
      - ../app:/var/www/html
      - ./php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - postgres
    networks:
      - app-network

  # Nginx Web Server
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "${WEB_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - ../app:/var/www/html
    depends_on:
      - php
    networks:
      - app-network

  # Node.js for frontend/build tools
  node:
    build:
      context: ../app
      dockerfile: ../docker/node/Dockerfile
    volumes:
      - ../app:/app
      - /app/node_modules
    working_dir: /app
    command: npm run dev
    ports:
      - "${NODE_DEV_PORT}:3000"
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:${POSTGRES_VERSION}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - app-network

  # pgAdmin for PostgreSQL administration
  pgadmin:
    image: dpage/pgadmin4:${COMPOSER_VERSION}
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

  # Composer for PHP dependencies
  composer:
    image: composer:${COMPOSER_VERSION}
    volumes:
      - ../app:/app
    working_dir: /app
    command: tail -f /dev/null
    depends_on:
      - php
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
